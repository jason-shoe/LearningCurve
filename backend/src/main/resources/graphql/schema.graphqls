type User {
    id: ID
    name: String
}

type Text {
    id: ID
    author: User
    phrases: [Phrase]
}

type Phrase {
    id: ID
    value: String
    pinyin: String
    meaning: String
}

type Query {
    userById(id: ID): User
    textById(id: ID): Text
    phraseById(id: ID): Phrase
}

input PhraseInput {
    value: String
    pinyin: String
    meaning: String
}

type Mutation {
    createUser(name: String): String!
    createText(authorId: ID!, phrases: [PhraseInput]): String!
    createPhrase(value: String!, pinyin: String!, meaning: String!): String!

    deleteText(textId: ID!): Boolean!
}


